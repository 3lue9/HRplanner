[{"/home/massimiliano/Documents/HRplanner/src/index.tsx":"1","/home/massimiliano/Documents/HRplanner/src/reportWebVitals.ts":"2","/home/massimiliano/Documents/HRplanner/src/App.tsx":"3","/home/massimiliano/Documents/HRplanner/src/services/auth.service.ts":"4","/home/massimiliano/Documents/HRplanner/src/common/EventBus.ts":"5","/home/massimiliano/Documents/HRplanner/src/components/profile.component.tsx":"6","/home/massimiliano/Documents/HRplanner/src/components/board-user.component.tsx":"7","/home/massimiliano/Documents/HRplanner/src/components/board-moderator.component.tsx":"8","/home/massimiliano/Documents/HRplanner/src/components/board-admin.component.tsx":"9","/home/massimiliano/Documents/HRplanner/src/components/login.component.tsx":"10","/home/massimiliano/Documents/HRplanner/src/components/register.component.tsx":"11","/home/massimiliano/Documents/HRplanner/src/components/home.component.tsx":"12","/home/massimiliano/Documents/HRplanner/src/services/user.service.ts":"13","/home/massimiliano/Documents/HRplanner/src/utils/supabaseClient.ts":"14","/home/massimiliano/Documents/HRplanner/src/services/auth-header.ts":"15"},{"size":573,"mtime":1720598166442,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1720598166442,"results":"18","hashOfConfig":"17"},{"size":4433,"mtime":1720598166441,"results":"19","hashOfConfig":"17"},{"size":1544,"mtime":1720626686302,"results":"20","hashOfConfig":"17"},{"size":380,"mtime":1720598166442,"results":"21","hashOfConfig":"17"},{"size":2107,"mtime":1720598166442,"results":"22","hashOfConfig":"17"},{"size":1069,"mtime":1720598166442,"results":"23","hashOfConfig":"17"},{"size":1075,"mtime":1720598166442,"results":"24","hashOfConfig":"17"},{"size":1071,"mtime":1720598166442,"results":"25","hashOfConfig":"17"},{"size":3615,"mtime":1720598166442,"results":"26","hashOfConfig":"17"},{"size":4746,"mtime":1720627057628,"results":"27","hashOfConfig":"17"},{"size":832,"mtime":1720598166442,"results":"28","hashOfConfig":"17"},{"size":522,"mtime":1720598166442,"results":"29","hashOfConfig":"17"},{"size":412,"mtime":1720598166443,"results":"30","hashOfConfig":"17"},{"size":517,"mtime":1720598166442,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1fgvaym",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/home/massimiliano/Documents/HRplanner/src/index.tsx",[],[],[],"/home/massimiliano/Documents/HRplanner/src/reportWebVitals.ts",[],[],"/home/massimiliano/Documents/HRplanner/src/App.tsx",["81"],[],"import { Component } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport IUser from './types/user.type';\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nimport EventBus from \"./common/EventBus\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport User from \"./components/user.component\";\n\n\n\ntype Props = {};\n\ntype State = {\n  showModeratorBoard: boolean,\n  showAdminBoard: boolean,\n  currentUser: IUser | undefined\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const user = await AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n\n    EventBus.on(\"logout\", this.logOut);\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\", this.logOut);\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            HRplanner\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/user\" element={<BoardUser />} />\n            <Route path=\"/mod\" element={<BoardModerator />} />\n            <Route path=\"/admin\" element={<BoardAdmin />} />\n          </Routes>\n        </div>\n\n        { /*<AuthVerify logOut={this.logOut}/> */}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/massimiliano/Documents/HRplanner/src/services/auth.service.ts",[],[],"/home/massimiliano/Documents/HRplanner/src/common/EventBus.ts",[],[],"/home/massimiliano/Documents/HRplanner/src/components/profile.component.tsx",[],[],"/home/massimiliano/Documents/HRplanner/src/components/board-user.component.tsx",[],[],"/home/massimiliano/Documents/HRplanner/src/components/board-moderator.component.tsx",[],[],"/home/massimiliano/Documents/HRplanner/src/components/board-admin.component.tsx",[],[],"/home/massimiliano/Documents/HRplanner/src/components/login.component.tsx",[],[],"/home/massimiliano/Documents/HRplanner/src/components/register.component.tsx",["82"],[],"import { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../services/auth.service\";\n\ntype Props = {};\n\ntype State = {\n  username: string,\n  email: string,\n  password: string,\n  successful: boolean,\n  message: string\n};\n\nexport default class Register extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string()\n        .test(\n          \"len\",\n          \"The username must be between 3 and 20 characters.\",\n          (val: any) =>\n            val &&\n            val.toString().length >= 3 &&\n            val.toString().length <= 20\n        )\n        .required(\"This field is required!\"),\n      email: Yup.string()\n        .email(\"This is not a valid email.\")\n        .required(\"This field is required!\"),\n      password: Yup.string()\n        .test(\n          \"len\",\n          \"The password must be between 6 and 40 characters.\",\n          (val: any) =>\n            val &&\n            val.toString().length >= 6 &&\n            val.toString().length <= 40\n        )\n        .required(\"This field is required!\"),\n    });\n  }\n\n  handleRegister(formValue: { username: string; email: string; password: string }) {\n    const { username, email, password } = formValue;\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    AuthService.register(email, password).then(\n      response => {\n        this.setState({\n          message: \"Registration successful!\",\n          successful: true\n        });\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      }\n    );\n  }\n\n  render() {\n    const { successful, message } = this.state;\n\n    const initialValues = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema()}\n            onSubmit={this.handleRegister}\n          >\n            <Form>\n              {!successful && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                    <ErrorMessage\n                      name=\"username\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <Field name=\"email\" type=\"email\" className=\"form-control\" />\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <Field\n                      name=\"password\"\n                      type=\"password\"\n                      className=\"form-control\"\n                    />\n                    <ErrorMessage\n                      name=\"password\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                  </div>\n                </div>\n              )}\n\n              {message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      successful ? \"alert alert-success\" : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n                    {message}\n                  </div>\n                </div>\n              )}\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n","/home/massimiliano/Documents/HRplanner/src/components/home.component.tsx",["83"],[],"import { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\ntype Props = {};\n\ntype State = {\n  content: string;\n}\n\nexport default class Home extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n     }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3></h3>\n        </header>\n      </div>\n    );\n  }\n}\n","/home/massimiliano/Documents/HRplanner/src/services/user.service.ts",[],[],"/home/massimiliano/Documents/HRplanner/src/utils/supabaseClient.ts",[],[],"/home/massimiliano/Documents/HRplanner/src/services/auth-header.ts",[],[],{"ruleId":"84","severity":1,"message":"85","line":18,"column":8,"nodeType":"86","messageId":"87","endLine":18,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":60,"column":13,"nodeType":"86","messageId":"87","endLine":60,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":42,"column":11,"nodeType":"91","endLine":42,"endColumn":15},"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]